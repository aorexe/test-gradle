name: "Golang Composite Action with Inputs"
description: "A composite action to test and build a Golang project"
inputs:
  java-version:
    description: 'Java version to use'
    required: true
    default: '17'
  java-distribution:
    description:
    required: true
    default: 'temurin'
  cache:
    description: 'Enable Build System cache'
    required: true
    default: true
  artifact:
    description: 'Enable Upload artifact'
    required: true
    default: true
  set-build-system:
    description: 'Override auto-detection of Build System'
    required: false
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Detect Build System
      id: system
      env:
        MANUAL_BUILD_SYSTEM: ${{ inputs.set-build-system }}
      run: |
        if [[ -n "$MANUAL_BUILD_SYSTEM" ]]; then
          echo "build-system=$MANUAL_BUILD_SYSTEM" >> $GITHUB_OUTPUT
        elif [[ -f "gradlew" ]]; then
          echo "Detected Gradle build system."
          echo "build-system=gradle" >> $GITHUB_OUTPUT
        elif [[ -f "pom.xml" ]]; then
          echo "Detected Maven build system."
          echo "build-system=maven" >> $GITHUB_OUTPUT
        else
          echo "No recognized build system found." && exit 1
        fi
      shell: bash
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        cache: ${{ inputs.cache == 'true' && steps.system.outputs.build-system || ''}}
    
    - name: Setup Gradle
      if: steps.system.outputs.build-system == 'gradle'
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-disabled: true

    - name: Build with Gradle
      id: gradle
      if: steps.system.outputs.build-system == 'gradle'
      run: |
        chmod +x gradlew
        ./gradlew build
        echo "artifact-path=build/libs/*.jar" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Build with Maven
      id: maven
      if: steps.system.outputs.build-system == 'maven'
      run: |
        mvn clean package
        echo "artifact-path=target/*.jar" >> $GITHUB_OUTPUT
      shell: bash

    - name: Upload Artifact
      if: inputs.artifact == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: application-gradle-jar
        path: ${{ steps.maven.outputs.artifact-path || steps.gradle.outputs.artifact-path }}
        retention-days: 1
        overwrite: true